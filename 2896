#include <cstring>
#include <cstdio>
#include <queue>

using namespace std;
int trie[100001][133];
int size=1,num[100001],fail[100001];
void ins(int Num,char *a)
{
    int p=1;
    for(char *q=a;*q;q++)
    {
        int id=*q;
        if(trie[p][id]==0) trie[p][id]=++size;
        p=trie[p][id];
    }
    num[p]=Num;
}
void build()
{
    queue<int>q;
    q.push(1);
    for(;!q.empty();)
    {
        int p=q.front();q.pop();
        int tmp=NULL;
        for(int i=0;i<=132;i++)
        {
            if(trie[p][i])
            {
                if(p==1) fail[trie[p][i]]=1;
                else
                {
                    tmp=fail[p];
                    for(;tmp;tmp=fail[tmp])
                    {
                        if(trie[tmp][i])
                        {
                            fail[trie[p][i]]=trie[tmp][i];
                            break;
                        }
                    }
                    if(!tmp) fail[trie[p][i]]=1;
                }
                q.push(trie[p][i]); 
            }
        }
    }
}
bool vis[505],mark[100001];
priority_queue<int>Q;
int query(int k,char *a)
{
    memset(vis,0,sizeof(vis));
    memset(mark,0,sizeof(mark));
    int p=1;
    for(char *q=a;*q;q++)
    {
        int id=*q;
        mark[p]=1;
        for(;!trie[p][id];p=fail[p]);
        p=trie[p][id];
        if(!mark[p])
        {
            int now=p;
            for(;now;now=fail[now])
            {
                if(num[now])
                {
                    vis[num[now]]=1;
                    Q.push(-num[now]);
                }
            }
        }
    }
    if(Q.size())
    {
        printf("web %d:",k);
        for(;!Q.empty();Q.pop()) printf(" %d",-Q.top());
        printf("\n");
        return 1;
    }
    else return 0;
}
int main(int argc,char *argv[])
{
    int N,M,total=0;
    scanf("%d",&N);
    char word[100005];
    for(int i=1;i<=N;i++)
    {
        scanf("%s",word);
        ins(i,word);
    }
    build();
    scanf("%d",&M);
    for(int i=1;i<=M;i++)
    {
        scanf("%s",word);
        memset(vis,0,sizeof(vis));
        total+=query(i,word);
    }
    printf("total: %d\n",total);
    return 0;
}
