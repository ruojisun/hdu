#include <algorithm>
#include <cstring>
#include <cstdio>
#define N 105

using namespace std;
bool vis[N],used[N];
int G[N][N],a[N][N],n,K,f[N],ans[N],sum;
inline int init()
{
    sum=0;
    memset(vis,0,sizeof(vis));
}
bool dfs(int x)
{
    for(int i=1;i<=n;++i)
    {
        if(!used[i]&&G[x][i])
        {
            used[i]=1;
            if(f[i]==-1||dfs(f[i]))
            {
                f[i]=x;
                return 1;
            }
        }
    }
    return 0;
}
int check()
{
    int num=0;
    memset(f,-1,sizeof(f));
    for(int i=1;i<=n;++i)
    {
        memset(used,0,sizeof(used));
        if(dfs(i)) num++;
    }
    return num;
}
int Main()
{
    for(;scanf("%d%d",&n,&K)&&n&&K;)
    {
        init();
        for(int i=1;i<=n;++i)
         for(int j=1;j<=n;++j)
          scanf("%d",&a[i][j]);
        for(int i=1;i<=n;++i)
        {
            for(int j=1;j<=n;++j)
            {
                if(vis[a[i][j]]) continue;
                vis[a[i][j]]=1;
                memset(G,0,sizeof(G));
                for(int k=1;k<=n;++k)
                 for(int l=1;l<=n;++l)
                  if(a[k][l]==a[i][j]) G[k][l]=1;
                if(check()>K) ans[++sum]=a[i][j]; 
            }
        }
        if(!sum) {printf("-1\n");continue;}
        sort(ans+1,ans+1+sum);
        for(int i=1;i<sum;++i) printf("%d ",ans[i]);
        printf("%d\n",ans[sum]); 
    }
    return 0;
}
int sb=Main();
int main(int argc,char *argv[]){;}
